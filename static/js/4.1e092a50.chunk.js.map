{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","errorStyle","formSummaryError","createField","Input","Textarea","Object","keys","contacts","map","key","style","contact","ProfileData","isOwner","toEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","info","src","photos","large","userPhoto","picture","alt","type","target","files","initialValues","formData","then","Post","item","message","likes","maxLength50","maxLengthCreator","AddPostReduxForm","Field","placeholder","name","component","validate","required","addPostButton","Posts","React","memo","postsElements","posts","post","likesCount","id","values","addPost","postText","PostsContainer","connect","state","newPostText","Profile","Preloader","ProfileContainer","userId","this","match","params","myId","history","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","profie","updateUserStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.1e092a50.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"picture\":\"ProfileInfo_picture__qPzdu\",\"info\":\"ProfileInfo_info__3Vlpr\",\"fullName\":\"ProfileInfo_fullName__1nuJM\",\"contact\":\"ProfileInfo_contact__2FxTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts___I2Ih\",\"addPostButton\":\"Posts_addPostButton__3TmD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__14rOm\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}><b>Status</b>: {props.status || 'No Status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div onBlur={deactivateEditMode}>\r\n                <input onChange={onStatusChange} autoFocus={true} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport style from './ProfileInfo.module.css';\r\nimport errorStyle from '../../Common/FormsControls/FormsControls.module.css'\r\nimport {createField, Input, Textarea} from '../../Common/FormsControls/FormsControls';\r\nimport {reduxForm} from 'redux-form';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>Save</button>\r\n            </div>\r\n            {error &&\r\n            <div className={errorStyle.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b>Full name</b>: {createField('Full name', 'fullName', Input, [])}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: {createField('About me', 'aboutMe', Textarea, [])}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {createField(null, 'lookingForAJob', Input, [], 'checkbox')}\r\n            </div>\r\n            <div>\r\n                <b>My professional\r\n                    skills</b>: {createField('My Professional skills', 'lookingForAJobDescription', Textarea, [])}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return (\r\n                    <div className={style.contact} key={key}>\r\n                        <b>{key}</b>: {createField(key, `contacts.${key}`, Input, [])}\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/userPhoto.png';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const toEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false)\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={style.info}>\r\n            <img src={profile.photos.large ? profile.photos.large : userPhoto} className={style.picture} alt={'userPhoto'}/>\r\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={profile} onSubmit={onSubmit} profile={profile}/>\r\n                : <ProfileData profile={profile}\r\n                               isOwner={isOwner}\r\n                               toEditMode={toEditMode}/>}\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    )\r\n};\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner &&\r\n            <div>\r\n                <button onClick={toEditMode}>Edit</button>\r\n            </div>}\r\n            <div className={style.fullName}>\r\n                {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe ? profile.aboutMe : ' '}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            <div>\r\n                <b>My profesional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={style.contact}>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\nimport userPhoto from '../../../../assets/images/userPhoto.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={style.item}>\r\n                <img src={userPhoto} alt={'userPhoto'}/>\r\n                {props.message}\r\n                <div>\r\n                    {props.likes} like\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Write post'}\r\n                       name={'postText'}\r\n                       component={Textarea} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button className={style.addPostButton}>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'addPost'})(AddPostForm);\r\n\r\nconst Posts = React.memo(props => {\r\n    let postsElements = props.posts\r\n        .map(post => <Post message={post.message} likes={post.likesCount} key={post.id} id={post.id}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.postText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.posts}>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default Posts;","import {addPost} from \"../../../Redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText,\r\n    }\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, {addPost})(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if(!props.profile) {\r\n        return(\r\n            <Preloader/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}/>\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.myId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profie={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateUserStatus}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profile.profile,\r\n        status: state.profile.status,\r\n        myId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}