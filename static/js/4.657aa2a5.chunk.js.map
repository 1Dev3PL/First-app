{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","ProfileInfo","className","style","info","src","profile","photos","large","userPhoto","alt","fullName","Post","item","message","likes","maxLength50","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","Posts","React","memo","postsElements","posts","map","post","likesCount","key","id","values","addPost","postText","PostsContainer","connect","state","newPostText","Profile","Preloader","ProfileContainer","userId","this","match","params","myId","history","getUserProfile","getUserStatus","profie","updateUserStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.657aa2a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"picture\":\"ProfileInfo_picture__qPzdu\",\"info\":\"ProfileInfo_info__3Vlpr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts___I2Ih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__14rOm\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useState, useEffect} from \"react\";\r\nimport style from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No Status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div onBlur={deactivateEditMode}>\r\n                <input onChange={onStatusChange} autoFocus={true} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/userPhoto.png';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div className={style.info}>\r\n            <img src={!props.profile.photos.large && userPhoto} alt={'userPhoto'}/>\r\n            <h1>{props.profile.fullName}</h1>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\nimport userPhoto from '../../../../assets/images/userPhoto.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div className={style.item}>\r\n                <img src={userPhoto}/>\r\n                {props.message}\r\n                <div>\r\n                    {props.likes} like\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Write post'}\r\n                       name={'postText'}\r\n                       component={Textarea} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'addPost'})(AddPostForm);\r\n\r\nconst Posts = React.memo(props => {\r\n    let postsElements = props.posts\r\n        .map(post => <Post message={post.message} likes={post.likesCount} key={post.id} id={post.id}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.postText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.posts}>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default Posts;","import React from 'react';\r\nimport {addPost} from \"../../../Redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText,\r\n    }\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, {addPost})(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if(!props.profile) {\r\n        return(\r\n            <Preloader/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.myId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profie={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateUserStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profile.profile,\r\n        status: state.profile.status,\r\n        myId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}