{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Friends/Friends.module.css","components/Dialogs/Friends/Friend/Friend.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Friends/Friend/Friend.tsx","components/Dialogs/Friends/Friends.tsx","components/Dialogs/Messages/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Friend","props","className","style","friend","to","id","activeClassName","activeLink","name","Friends","friendsElements","friends","map","key","Message","message","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","Textarea","required","Messages","messagesElements","messages","values","sendMessage","messageText","Dialogs","dialogs","DialogsContainer","this","React","Component","compose","connect","state","dialogsActions","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,oBCA/DD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,mLCgBbC,EARqB,SAACC,GACjC,OACI,yBAAKC,UAAWC,IAAMC,QAClB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAMK,YAAaP,EAAMQ,QCQ5EC,EAXsB,SAAC,GAAe,IAC7CC,EAD4C,EAAbC,QAE9BC,KAAI,SAAAT,GAAM,OAAI,kBAAC,EAAD,CAAQK,KAAML,EAAOK,KAAMK,IAAKV,EAAOE,GAAIA,GAAIF,EAAOE,QAEzE,OACI,yBAAKJ,UAAWC,IAAMS,SACjBD,I,oCCDEI,EANsB,SAACd,GAClC,OACI,yBAAKC,UAAWC,IAAMa,SAAUf,EAAMe,U,yBCLxCC,EAAeC,YAAiB,KAwBvBC,EAFaC,YAA+C,CAACC,KAAM,cAAtDD,EAdyE,SAACnB,GAClG,OACI,0BAAMqB,SAAUrB,EAAMsB,cAClB,6BACKC,YACA,gBAAiB,cAAeC,IAAU,CAACC,IAAUT,KAE1D,6BACI,6CCQDU,EAlBuB,SAAC1B,GACnC,IAAI2B,EAAmB3B,EAAM4B,SACxBhB,KAAI,SAAAG,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASF,IAAKE,EAAQV,GAAIA,GAAIU,EAAQV,QAMpF,OACI,yBAAKJ,UAAWC,IAAM0B,UAClB,6BACKD,GAEL,kBAAC,EAAD,CAAqBN,SATV,SAACQ,GAChB7B,EAAM8B,YAAYD,EAAOE,kBCKlBC,EATsB,SAAChC,GAClC,OACI,yBAAKC,UAAWC,IAAM+B,SAClB,kBAAC,EAAD,CAAStB,QAASX,EAAMW,UACxB,kBAAC,EAAD,CAAUiB,SAAU5B,EAAM4B,SAAUE,YAAa9B,EAAM8B,gB,eCK7DI,E,iLAEE,OACI,6BACI,kBAAC,EAAD,CAASvB,QAASwB,KAAKnC,MAAMW,QACpBiB,SAAUO,KAAKnC,MAAM4B,SACrBE,YAAaK,KAAKnC,MAAM8B,mB,GANlBM,IAAMC,WAmBtBC,sBACXC,aARkB,SAACC,GACnB,MAAO,CACH7B,QAAS6B,EAAMP,QAAQtB,QACvBiB,SAAUY,EAAMP,QAAQL,YAMV,CAACE,YAAaW,IAAeX,cAC/CY,IAHWJ,CAIbJ","file":"static/js/3.f8e4bf66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__xxJGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2HUhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2h3fz\",\"activeLink\":\"Friend_activeLink__2HVIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__O-ldN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3jhgM\"};","import React from 'react';\r\nimport style from './Friend.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst Friend: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={style.friend}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={style.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Friend;","import React from 'react';\r\nimport style from './Friends.module.css';\r\nimport Friend from \"./Friend/Friend\";\r\nimport {FriendType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nconst Friends: React.FC<PropsType> = ({friends}) => {\r\n    let friendsElements = friends\r\n        .map(friend => <Friend name={friend.name} key={friend.id} id={friend.id}/>);\r\n\r\n    return (\r\n        <div className={style.friends}>\r\n            {friendsElements}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Friends;","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport React from \"react\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nexport type NewMessageFormValuesType = {\r\n    messageText: string\r\n}\r\ntype NewMessageFormValuesKeysType = Extract<keyof NewMessageFormValuesType, string>\r\ntype PropsType = {}\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField<NewMessageFormValuesKeysType>\r\n                ('Write message', 'messageText', Textarea, [required, maxLength100])}\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm<NewMessageFormValuesType, PropsType>({form: 'addMessage'})(AddMessageForm);\r\n\r\nexport default AddMessageReduxForm","import React from 'react';\r\nimport style from './Messages.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport {MessageType} from \"../../../types/types\";\r\nimport AddMessageReduxForm, { NewMessageFormValuesType } from '../AddMessageForm/AddMessageForm';\r\n\r\ntype PropsType = {\r\n    messages: Array<MessageType>\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\nconst Messages: React.FC<PropsType> = (props) => {\r\n    let messagesElements = props.messages\r\n        .map(message => <Message message={message.message} key={message.id} id={message.id}/>);\r\n\r\n    let onAddMessage = (values: NewMessageFormValuesType) => {\r\n        props.sendMessage(values.messageText);\r\n    };\r\n\r\n    return (\r\n        <div className={style.messages}>\r\n            <div>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={onAddMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport Friends from \"./Friends/Friends\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {FriendType, MessageType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    friends: Array<FriendType>\r\n    messages: Array<MessageType>\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <Friends friends={props.friends}/>\r\n            <Messages messages={props.messages} sendMessage={props.sendMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {dialogsActions} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {FriendType, MessageType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    friends: Array<FriendType>\r\n    messages: Array<MessageType>\r\n}\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (messageText: string) => void\r\n}\r\ntype OwnPropsType = {\r\n\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass DialogsContainer extends React.Component<PropsType> {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialogs friends={this.props.friends}\r\n                         messages={this.props.messages}\r\n                         sendMessage={this.props.sendMessage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        friends: state.dialogs.friends,\r\n        messages: state.dialogs.messages,\r\n    }\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>\r\n    (mapStateToProps, {sendMessage: dialogsActions.sendMessage}),\r\n    withAuthRedirect\r\n)(DialogsContainer);"],"sourceRoot":""}